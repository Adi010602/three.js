{"mappings":"AAAA,+BAA+B;AAC/B,gDAAgD;AAEhD,mBAAmB;AACnB,mCAAmC;AAEnC,oBAAoB;AACpB,yDAAyD;AACzD,oEAAoE;AACpE,qBAAqB;AAErB,WAAW;AACX,yEAAyE;AACzE,oCAAoC;AACpC,2DAA2D;AAC3D,mDAAmD;AAEnD,kCAAkC;AAElC,aAAa;AACb,mDAAmD;AACnD,qEAAqE;AACrE,mDAAmD;AACnD,mBAAmB;AAEnB,yBAAyB;AACzB,MAAM,QAAQ,IAAI,MAAM,KAAK;AAC1B,MAAM,SAAS,IAAI,MAAM,iBAAiB,CAAE,IAAI,OAAO,UAAU,GAAG,OAAO,WAAW,EAAE,KAAK;AAE7F,MAAM,WAAW,IAAI,MAAM,aAAa;AACxC,SAAS,OAAO,CAAE,OAAO,UAAU,EAAE,OAAO,WAAW;AACvD,SAAS,IAAI,CAAC,WAAW,CAAE,SAAS,UAAU;AAE9C,MAAM,WAAW,IAAI,MAAM,WAAW,CAAE,GAAG,GAAG;AAC9C,MAAM,WAAW,IAAI,MAAM,iBAAiB,CAAE;IAAE,OAAO;AAAS;AAChE,MAAM,OAAO,IAAI,MAAM,IAAI,CAAE,UAAU;AACvC,MAAM,GAAG,CAAE;AAEX,OAAO,QAAQ,CAAC,CAAC,GAAG;AAEpB,SAAS,UAAU;IAClB,sBAAuB;IAEvB,KAAK,QAAQ,CAAC,CAAC,IAAI;IACnB,KAAK,QAAQ,CAAC,CAAC,IAAI;IAEnB,SAAS,MAAM,CAAE,OAAO;AACzB;AAEA","sources":["index.js"],"sourcesContent":["// import * as THREE from THREE\r\n// const canvas = document.querySelector(webgl);\r\n\r\n// creating a scene\r\n// const scene = new THREE.Scene();\r\n\r\n// creating a camera\r\n// const aspect = window.innerWidth / window.innerHeight;\r\n// const camera = new THREE.PerspectiveCamera(75, aspect, 0.1, 100);\r\n// scene.add(camera);\r\n\r\n// renderer\r\n// const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\n// renderer.setClearColor(0x222222);\r\n// renderer.setSize(window.innerWidth, window.innerHeight);\r\n// renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// renderer.render(scene, camera);\r\n\r\n// adding box\r\n// const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n// const material = new THREE.MeshBasicMaterial({ color: 0x781CE5 });\r\n// const mesh = new THREE.Mesh(geometry, material);\r\n// scene.add(mesh);\r\n\r\n// camera.position.z = 2;\r\nconst scene = new THREE.Scene();\r\n\t\t\tconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\r\n\t\t\tconst renderer = new THREE.WebGLRenderer();\r\n\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t\tdocument.body.appendChild( renderer.domElement );\r\n\r\n\t\t\tconst geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n\t\t\tconst material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n\t\t\tconst cube = new THREE.Mesh( geometry, material );\r\n\t\t\tscene.add( cube );\r\n\r\n\t\t\tcamera.position.z = 5;\r\n\r\n\t\t\tfunction animate() {\r\n\t\t\t\trequestAnimationFrame( animate );\r\n\r\n\t\t\t\tcube.rotation.x += 0.01;\r\n\t\t\t\tcube.rotation.y += 0.01;\r\n\r\n\t\t\t\trenderer.render( scene, camera );\r\n\t\t\t};\r\n\r\n\t\t\tanimate();"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}